# apiVersion: argoproj.io/v1alpha1
# kind: Rollout
# metadata:
#   name: canary-rollout
# spec:
#   replicas: 2
#   revisionHistoryLimit: 2
#   selector:
#     matchLabels:
#       app: canary
#   template:
#     metadata:
#       labels:
#         app: canary
#     spec:
#       containers:
#       - name: canary-rollouts
#         image: 578310434439.dkr.ecr.ap-northeast-2.amazonaws.com/develop:main-3410cd3
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5000
#   strategy:
#     canary:
#       maxSurge: "25%"
#       maxUnavailable: 0
#       steps:
#       - setWeight: 25
#       - pause: {}   
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: canary-service
# spec:
#   selector:
#     app: canary
#   ports:
#   - protocol: TCP
#     port: 80
#     nodePort: 30081
#   type: NodePort


# ArgoCD Blue/Green 배포 예제
apiVersion: argoproj.io/v1alpha1     # apps/v1 대신 argoproj.io/v1alpha1을 사용한다
kind: Rollout  # Deplyment 대신 Rollout을 사용한다
metadata:
  name: rollout-bluegreen
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-bluegreen
  template:
    metadata:
      labels:
        app: rollout-bluegreen
    spec:
      containers:
      - name: rollouts-demo
        image: 578310434439.dkr.ecr.ap-northeast-2.amazonaws.com/develop:main-3410cd3 # blue
        imagePullPolicy: Always
        ports:
        - containerPort: 80
  strategy:
    blueGreen: 
      activeService: rollout-bluegreen-active
      previewService: rollout-bluegreen-preview
      autoPromotionEnabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: rollout-bluegreen-active
spec:
  selector:
    app: rollout-bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
#image: 578310434439.dkr.ecr.ap-northeast-2.amazonaws.com/develop:main-4c3e767 # green
---
kind: Service
apiVersion: v1
metadata:
  name: rollout-bluegreen-preview
spec:
  selector:
    app: rollout-bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80