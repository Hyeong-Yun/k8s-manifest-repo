# apiVersion: argoproj.io/v1alpha1
# kind: Rollout # Rollout으로 생성
# metadata:
#   name: canary-rollout
# spec:
#   replicas: 8
#   revisionHistoryLimit: 2
#   selector:
#     matchLabels:
#       app: canary
#   template:
#     metadata:
#       labels:
#         app: canary
#     spec:
#       containers:
#       - name: canary-rollouts-demo
#         image: 578310434439.dkr.ecr.ap-northeast-2.amazonaws.com/cicd-test:main-819fae0
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5000
#   # 이 부분에서 카나리로 지정
#   strategy:
#     canary:
#       maxSurge: "25%"    # canary 배포로 생성할 pod의 비율
#       maxUnavailable: 0  # 업데이트 될 때 사용할 수 없는 pod의 최대 수
#       steps:
#       - setWeight: 25    # 카나리로 배포된 서버로 전송해야될 트래픽 비율
#       - pause: {}        # AutoPromotion Time (하단 설명 참조)
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: canary-service
# spec:
#   selector:
#     app: canary
#   ports:
#   - protocol: TCP
#     port: 80
#     nodePort: 30081
#   type: NodePort

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-bluegreen
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-bluegreen
  template:
    metadata:
      labels:
        app: rollout-bluegreen
    spec:
      containers:
      - name: rollouts-demo
        image: argoproj/rollouts-demo:blue
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
  strategy:
    blueGreen:
      activeService: rollout-bluegreen-active
      previewService: rollout-bluegreen-preview
      autoPromotionEnabled: false
 
---
kind: Service
apiVersion: v1
metadata:
  name: rollout-bluegreen-active
spec:
  type: NodePort
  selector:
    app: rollout-bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30081
 
---
kind: Service
apiVersion: v1
metadata:
  name: rollout-bluegreen-preview
spec:
  type: NodePort
  selector:
    app: rollout-bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30082